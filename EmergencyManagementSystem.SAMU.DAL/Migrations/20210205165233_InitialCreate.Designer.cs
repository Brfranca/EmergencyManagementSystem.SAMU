// <auto-generated />
using System;
using EmergencyManagementSystem.SAMU.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmergencyManagementSystem.SAMU.DAL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210205165233_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CEP")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CEP");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("City");

                    b.Property<string>("Complement")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Complement");

                    b.Property<string>("District")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("District");

                    b.Property<string>("Number")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Number");

                    b.Property<string>("Reference")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Reference");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Street");

                    b.HasKey("Id");

                    b.ToTable("Addresses", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<int>("EmergencyStatus")
                        .HasColumnType("int")
                        .HasColumnName("EmergencyStatus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Name");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RequesterName");

                    b.Property<string>("RequesterPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("RequesterPhone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Emergencies", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.EmergencyHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("Description");

                    b.Property<long>("EmergencyId")
                        .HasColumnType("bigint");

                    b.Property<int>("EmergencyStatus")
                        .HasColumnType("int")
                        .HasColumnName("EmergencyStatus");

                    b.Property<Guid>("EmployeeGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeGuid");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyId");

                    b.ToTable("EmergencyHistories", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.EmergencyRequiredVehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("CodeColor")
                        .HasColumnType("int")
                        .HasColumnName("CodeColor");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<long>("EmergencyId")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int")
                        .HasColumnName("VehicleType");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyId");

                    b.ToTable("EmergencyRequiredVehicles", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.MedicalEvaluation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<long>("EmergencyId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("EmployeeGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeGuid");

                    b.Property<string>("Evaluation")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Evaluation");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyId");

                    b.HasIndex("PatientId");

                    b.ToTable("MedicalEvaluations", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Patient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("Age");

                    b.Property<long>("EmergencyId")
                        .HasColumnType("bigint");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telephone");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyId");

                    b.ToTable("Patients", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.TeamMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<Guid>("EmployeeGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("EmployeeGuid");

                    b.Property<long>("VehicleTeamId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTeamId");

                    b.ToTable("TeamMembers", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("VehicleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("VehicleName");

                    b.Property<string>("VehiclePlate")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("VehiclePlate");

                    b.Property<int>("VehicleSituation")
                        .HasColumnType("int")
                        .HasColumnName("VehicleSituation");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int")
                        .HasColumnName("VehicleType");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.VehiclePositionHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<int>("VehicleStatus")
                        .HasColumnType("int")
                        .HasColumnName("VehicleStatus");

                    b.Property<long>("VehicleTeamId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleTeamId");

                    b.ToTable("VehiclePositionHistories", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.VehicleTeam", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Description");

                    b.Property<long>("EmergencyId")
                        .HasColumnType("bigint");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleTeamStatus")
                        .HasColumnType("int")
                        .HasColumnName("VehicleTeamStatus");

                    b.HasKey("Id");

                    b.HasIndex("EmergencyId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleTeams", "dbo");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.EmergencyHistory", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", "Emergency")
                        .WithMany("EmergencyHistories")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emergency");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.EmergencyRequiredVehicle", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", "Emergency")
                        .WithMany("EmergencyRequiredVehicles")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emergency");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.MedicalEvaluation", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", "Emergency")
                        .WithMany("MedicalEvaluations")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Patient", "Patient")
                        .WithMany("MedicalEvaluations")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emergency");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Patient", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", "Emergency")
                        .WithMany("Patients")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Emergency");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.TeamMember", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.VehicleTeam", "VehicleTeam")
                        .WithMany("TeamMembers")
                        .HasForeignKey("VehicleTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VehicleTeam");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.VehiclePositionHistory", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.VehicleTeam", "VehicleTeam")
                        .WithMany("VehiclePositionHistories")
                        .HasForeignKey("VehicleTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VehicleTeam");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.VehicleTeam", b =>
                {
                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", "Emergency")
                        .WithMany("VehicleTeams")
                        .HasForeignKey("EmergencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmergencyManagementSystem.SAMU.Entities.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleTeams")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emergency");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Emergency", b =>
                {
                    b.Navigation("EmergencyHistories");

                    b.Navigation("EmergencyRequiredVehicles");

                    b.Navigation("MedicalEvaluations");

                    b.Navigation("Patients");

                    b.Navigation("VehicleTeams");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Patient", b =>
                {
                    b.Navigation("MedicalEvaluations");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleTeams");
                });

            modelBuilder.Entity("EmergencyManagementSystem.SAMU.Entities.Entities.VehicleTeam", b =>
                {
                    b.Navigation("TeamMembers");

                    b.Navigation("VehiclePositionHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
